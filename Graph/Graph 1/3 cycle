Given a graph with N vertices (numbered from 1 to N) and Two Lists (U,V) of size M where (U[i],V[i]) and (V[i],U[i]) are connected by an edge , 
then count the distinct 3-cycles in the graph. A 3-cycle PQR is a cycle in which (P,Q), (Q,R) and (R,P) are connected an edge.




#include <bits/stdc++.h>

using namespace std;

int solve(int n,int m,vector<int>u,vector<int>v)

{

	// Write your code here .

    unordered_map<int,unordered_set<int> >adj;

    

    for(int i=0;i<m;i++){

        adj[u[i]].insert(v[i]);

        adj[v[i]].insert(u[i]);

    }

    

    

    int thcycle=0;

    for(int i=1;i<=n;i++){

        int node=i;

        

        for(int p=1;p<n;p++){

            for(int q=p+1;q<=n;q++){

                

                if(adj[node].count(p)==0)

                    break;

                if(adj[node].count(q)==0)

                    continue;

                

                if(adj[node].count(p) && adj[node].count(q)){

                    if(adj[p].count(q))

                        thcycle++;

                }

            }

        }

    }

    return thcycle/3;

    

}
