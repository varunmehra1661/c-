#include<bits/stdc++.h>

// level wise 

TreeNode<int>* maxDataNode(TreeNode<int>* root) {    
	TreeNode<int> *max=new TreeNode<int>(INT_MIN);
    queue<TreeNode<int>*> pn;
    pn.push(root);
    
    while(pn.size()!=0)
    {
        TreeNode<int>* front=pn.front();
        pn.pop();
        if(front->data > max->data)
           max=front;
            
        for(int i=0;i<front->children.size();i++)
        {
            pn.push(front->children[i]);
        }
    }
    return max;

}


//recursive 

TreeNode<int>* maxDataNode(TreeNode<int>* root) {

	TreeNode<int> *max=new TreeNode<int>(root->data);
    
    for(int i=0;i<root->children.size();i++)
    {
        TreeNode<int> *child=maxDataNode(root->children[i]);
        if(child->data > max->data)
              max=child;
    }
    
    return max;
}
